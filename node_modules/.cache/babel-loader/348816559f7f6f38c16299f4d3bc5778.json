{"ast":null,"code":"var _jsxFileName = \"/Users/mikitosaarna/Documents/Software-Engineering/Thinkful/Qualified-challenges/react/project-pomodoro-timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/AdditionalTimerFeatures.js\";\nimport React from \"react\";\nimport CurrentSessionTotalDuration from \"./CurrentSessionTotalDuration\";\n\nfunction AdditionalTimerFeatures(session, focusDuration, breakDuration) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, session.label, \" for \", /*#__PURE__*/React.createElement(CurrentSessionTotalDuration, {\n    currentSession: session,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 35\n    }\n  }), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, session ? secondsToDuration(session.timeRemaining) : 0, \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\" // aria-valuenow={formData.session ? progressBarHandler : \"0\"} // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    \"aria-valuenow\": progressBarHandler() // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${progressBarHandler() * 100}%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  })))));\n}\n\nexport default AdditionalTimerFeatures;","map":{"version":3,"sources":["/Users/mikitosaarna/Documents/Software-Engineering/Thinkful/Qualified-challenges/react/project-pomodoro-timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/AdditionalTimerFeatures.js"],"names":["React","CurrentSessionTotalDuration","AdditionalTimerFeatures","session","focusDuration","breakDuration","label","secondsToDuration","timeRemaining","height","progressBarHandler","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,2BAAP,MAAwC,+BAAxC;;AAEA,SAASC,uBAAT,CAAiCC,OAAjC,EAA0CC,aAA1C,EAAyDC,aAAzD,EAAwE;AACpE,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,CAACG,KADX,wBACsB,oBAAC,2BAAD;AAA6B,IAAA,cAAc,EAAEH,OAA7C;AAAsD,IAAA,aAAa,EAAEC,aAArE;AAAoF,IAAA,aAAa,EAAEC,aAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtB,aAFF,eAOE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGF,OAAO,GAAGI,iBAAiB,CAACJ,OAAO,CAACK,aAAT,CAApB,GAA8C,CAJxD,eAPF,CADF,CAFA,eAkBA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB,CAKE;AALF;AAME,qBAAeC,kBAAkB,EANnC,CAMuC;AANvC;AAOE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAG,GAAED,kBAAkB,KAAK,GAAI;AAAvC,KAPT,CAOsD;AAPtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAlBA,CADJ;AAoCH;;AAED,eAAeR,uBAAf","sourcesContent":["import React from \"react\";\nimport CurrentSessionTotalDuration from \"./CurrentSessionTotalDuration\";\n\nfunction AdditionalTimerFeatures(session, focusDuration, breakDuration) {\n    return (\n        <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n            <h2 data-testid=\"session-title\">\n              {session.label} for <CurrentSessionTotalDuration currentSession={session} focusDuration={focusDuration} breakDuration={breakDuration} /> minutes\n              \n            </h2>\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {/* chaining chaining operator and ternary operator */}\n              {/* {formData.session?.timeRemaining ? secondsToDuration(formData.session.timeRemaining) : 0} remaining */}\n              {/* amended original above */}\n              {session ? secondsToDuration(session.timeRemaining) : 0} remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                // aria-valuenow={formData.session ? progressBarHandler : \"0\"} // TODO: Increase aria-valuenow as elapsed time increases\n                aria-valuenow={progressBarHandler()} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: `${progressBarHandler() * 100}%` }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      )\n}\n\nexport default AdditionalTimerFeatures;"]},"metadata":{},"sourceType":"module"}