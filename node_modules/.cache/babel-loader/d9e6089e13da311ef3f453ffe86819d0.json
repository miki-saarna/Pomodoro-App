{"ast":null,"code":"var _jsxFileName = \"/Users/mikitosaarna/Documents/Software-Engineering/Thinkful/Qualified-challenges/react/project-pomodoro-timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from \"../utils/duration/index\";\nimport DurationSetter from \"./DurationSetter\";\nimport DurationHandler from \"./DurationHandler\";\nimport IncrementDecrementButton from \"./IncrementDecrementButton\"; // These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\nfunction nextTick(prevState) {\n  const focus = prevState.session.label;\n  const timeRemaining = Math.max(0, prevState.session.timeRemaining - 1);\n\n  if (focus === 'Focusing') {\n    return { ...prevState,\n      session: {\n        label: \"Focusing\",\n        timeRemaining: timeRemaining\n      }\n    };\n  } else {\n    return { ...prevState,\n      session: {\n        label: \"On Break\",\n        timeRemaining: timeRemaining\n      }\n    };\n  }\n}\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return currentSession => {\n    if (currentSession.session.label === \"Focusing\") {\n      return { ...currentSession,\n        session: {\n          label: \"On Break\",\n          timeRemaining: breakDuration * 60\n        }\n      };\n    }\n\n    return { ...currentSession,\n      session: {\n        label: \"Focusing\",\n        timeRemaining: focusDuration * 60\n      }\n    };\n  };\n}\n\nfunction Pomodoro() {\n  var _formData$session, _formData$session2;\n\n  const initialFormState = {\n    isTimerRunning: false,\n    session: null,\n    disable: true,\n    focusDuration: 25,\n    breakDuration: 5\n  };\n  const [formData, setFormData] = useState({ ...initialFormState\n  });\n  const focusDuration = formData.focusDuration;\n  const breakDuration = formData.breakDuration; // appears to have bug: button must NOT be clicked in the center\n\n  const durationHandler = event => {\n    if (event.target.name === \"focus\") {\n      const focusTime = DurationSetter(event, focusDuration);\n      setFormData({ ...formData,\n        focusDuration: focusTime\n      });\n    } else {\n      const breakTime = DurationSetter(event, breakDuration);\n      setFormData({ ...formData,\n        breakDuration: breakTime\n      });\n    }\n  }; // stops timer when stop button is pressed; also disables stop button since timer is already stopped\n\n\n  const stopTimerHandler = () => {\n    setFormData({ ...initialFormState,\n      disable: true\n    });\n  }; // displays the total (not leftover) set duration of the current session\n\n\n  const currentSessionDuration = () => {\n    if (formData.session === null) {\n      return '';\n    } else if (formData.session.label === 'Focusing') {\n      return minutesToDuration(focusDuration);\n    } else {\n      return minutesToDuration(breakDuration);\n    }\n  };\n\n  const displayHandler = () => {\n    if (formData.session === null) {\n      return 'none';\n    }\n  };\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n\n\n  useInterval(() => {\n    if (formData.session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      return setFormData(nextSession(focusDuration, breakDuration));\n    }\n\n    return setFormData(nextTick);\n  }, formData.isTimerRunning ? 1000 : null);\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n  function playPause() {\n    setFormData(prevState => {\n      // setting state to opposite of prevState\n      const nextState = !prevState.isTimerRunning; // if time is now playing ('true')\n\n      if (nextState) {\n        if (prevState.session === null) {\n          return { ...formData,\n            isTimerRunning: nextState,\n            disable: false,\n            session: {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            }\n          };\n        }\n\n        return { ...formData,\n          isTimerRunning: nextState,\n          session: prevState.session\n        };\n      } // if now paused ('false')\n\n\n      if (!nextState) {\n        return { ...formData,\n          isTimerRunning: nextState\n        };\n      }\n\n      ;\n    });\n  }\n\n  const hilo = !formData.disable;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: durationHandler,\n    value: \"decrease\",\n    name: \"focus\",\n    disabled: !formData.disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: durationHandler,\n    value: \"increase\",\n    name: \"focus\",\n    disabled: !formData.disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IncrementDecrementButton, {\n    duration: durationHandler,\n    disable: !formData.disable,\n    value: \"increase\",\n    name: \"focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: durationHandler,\n    value: \"decrease\",\n    name: \"break\",\n    disabled: !formData.disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: durationHandler,\n    value: \"increase\",\n    name: \"break\",\n    disabled: !formData.disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !formData.isTimerRunning,\n      \"oi-media-pause\": formData.isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    onClick: stopTimerHandler,\n    disabled: formData.disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, (_formData$session = formData.session) === null || _formData$session === void 0 ? void 0 : _formData$session.label, \" for \", currentSessionDuration(), \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, ((_formData$session2 = formData.session) === null || _formData$session2 === void 0 ? void 0 : _formData$session2.timeRemaining) ? formData.session.timeRemaining : 0, \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: \"0%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/mikitosaarna/Documents/Software-Engineering/Thinkful/Qualified-challenges/react/project-pomodoro-timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","DurationSetter","DurationHandler","IncrementDecrementButton","nextTick","prevState","focus","session","label","timeRemaining","Math","max","nextSession","focusDuration","breakDuration","currentSession","Pomodoro","initialFormState","isTimerRunning","disable","formData","setFormData","durationHandler","event","target","name","focusTime","breakTime","stopTimerHandler","currentSessionDuration","displayHandler","Audio","play","playPause","nextState","hilo","oi","height","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport {minutesToDuration} from \"../utils/duration/index\";\nimport DurationSetter from \"./DurationSetter\";\nimport DurationHandler from \"./DurationHandler\"\nimport IncrementDecrementButton from \"./IncrementDecrementButton\";\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const focus = prevState.session.label;\n  const timeRemaining = Math.max(0, prevState.session.timeRemaining - 1);\n  if(focus === 'Focusing'){\n  return {\n    ...prevState,\n    session: {\n      label: \"Focusing\",\n      timeRemaining: timeRemaining}\n  };\n} else {\n  return {\n    ...prevState,\n    session: {\n    label: \"On Break\",\n    timeRemaining: timeRemaining}\n  };\n}\n}\n\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.session.label === \"Focusing\") {\n      return {\n        ...currentSession,\n        session: {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n        }\n      };\n    }\n    return {\n      ...currentSession,\n      session: {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n      }\n    };\n  };\n}\n\nfunction Pomodoro() {\n  const initialFormState = {\n    isTimerRunning: false,\n    session: null,\n    disable: true,\n    focusDuration: 25,\n    breakDuration: 5,\n  }\n  const[formData, setFormData] = useState({...initialFormState});\n  \n  const focusDuration = formData.focusDuration;\n  const breakDuration = formData.breakDuration;\n\n  // appears to have bug: button must NOT be clicked in the center\n  const durationHandler = (event) => {\n    if(event.target.name === \"focus\") {\n      const focusTime = DurationSetter(event, focusDuration);\n      setFormData({...formData, focusDuration: focusTime})\n    } else {\n      const breakTime = DurationSetter(event, breakDuration);\n      setFormData({...formData, breakDuration: breakTime})\n    }\n  }\n\n  // stops timer when stop button is pressed; also disables stop button since timer is already stopped\n  const stopTimerHandler = () => { setFormData({...initialFormState, disable: true}) }\n\n  // displays the total (not leftover) set duration of the current session\n  const currentSessionDuration = () => {\n    if(formData.session === null) {return ''}\n    else if(formData.session.label === 'Focusing'){\n      return minutesToDuration(focusDuration)\n    } else {\n      return minutesToDuration(breakDuration)\n    }\n  }\n\n  const displayHandler = () => {\n    if(formData.session === null) {\n      return 'none'\n    }\n  }\n  \n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(() => { \n      if (formData.session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setFormData(nextSession(focusDuration, breakDuration));\n      }\n      return setFormData(nextTick);\n    },\n    formData.isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setFormData((prevState) => {\n      // setting state to opposite of prevState\n      const nextState = !prevState.isTimerRunning;\n      // if time is now playing ('true')\n      if (nextState) {\n          if(prevState.session === null) {\n            return {\n              ...formData,\n              isTimerRunning: nextState,\n              disable: false,\n              session: {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            }}\n          }\n        return {...formData,\n                isTimerRunning: nextState,\n                session: prevState.session}\n      }\n      // if now paused ('false')\n      if(!nextState) {return {...formData, isTimerRunning: nextState}};\n    });\n  }\nconst hilo = !formData.disable;\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={durationHandler}\n                value=\"decrease\"\n                name=\"focus\"\n                disabled={!formData.disable}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={durationHandler}\n                value=\"increase\"\n                name=\"focus\"\n                disabled={!formData.disable}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n              <IncrementDecrementButton duration={durationHandler} disable={!formData.disable} value='increase' name='focus' />\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={durationHandler}\n                  value=\"decrease\"\n                  name=\"break\"\n                  disabled={!formData.disable}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={durationHandler}\n                  value=\"increase\"\n                  name=\"break\"\n                  disabled={!formData.disable}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !formData.isTimerRunning,\n                  \"oi-media-pause\": formData.isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              onClick={stopTimerHandler}\n              disabled={formData.disable}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      {/* create ternary operator to run component that displays following information */}\n      <div>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n            <h2 data-testid=\"session-title\">\n              {formData.session?.label} for {currentSessionDuration()} minutes\n            </h2>\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {/* ternary operator */}\n              {formData.session?.timeRemaining ? formData.session.timeRemaining : 0} remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}