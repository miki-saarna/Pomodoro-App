{"ast":null,"code":"function DurationSetter(event, time) {\n  // variable that indicates whether it's a 'focus' or 'break' session\n  const focusOrBreak = event.target.name; // sets lower and upper limits for time durationif during a 'focus' session\n\n  if (focusOrBreak === 'focus') time = Math.min(Math.max(time, 16), 59); // sets lower and upper limits for time durationif during a 'break' session\n\n  if (focusOrBreak === 'break') time = Math.min(Math.max(time, 2), 14); // variable used to determine if button pressed was incremental or decremental\n\n  const decreaseButton = event.target.value;\n  return decreaseButton === 'decrease' ? time -= 1 : time += 1;\n}\n\nexport default DurationSetter;","map":{"version":3,"sources":["/Users/mikitosaarna/Documents/Software-Engineering/Thinkful/Qualified-challenges/react/project-pomodoro-timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/DurationSetter.js"],"names":["DurationSetter","event","time","focusOrBreak","target","name","Math","min","max","decreaseButton","value"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,IAA/B,EAAqC;AACjC;AACA,QAAMC,YAAY,GAAGF,KAAK,CAACG,MAAN,CAAaC,IAAlC,CAFiC,CAIjC;;AACA,MAAGF,YAAY,KAAK,OAApB,EAA6BD,IAAI,GAAGI,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASN,IAAT,EAAe,EAAf,CAAT,EAA6B,EAA7B,CAAP,CALI,CAMjC;;AACA,MAAGC,YAAY,KAAK,OAApB,EAA6BD,IAAI,GAAGI,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASN,IAAT,EAAe,CAAf,CAAT,EAA4B,EAA5B,CAAP,CAPI,CASjC;;AACA,QAAMO,cAAc,GAAGR,KAAK,CAACG,MAAN,CAAaM,KAApC;AAEA,SAAOD,cAAc,KAAK,UAAnB,GAAgCP,IAAI,IAAI,CAAxC,GAA4CA,IAAI,IAAI,CAA3D;AACH;;AAED,eAAeF,cAAf","sourcesContent":["function DurationSetter(event, time) {\n    // variable that indicates whether it's a 'focus' or 'break' session\n    const focusOrBreak = event.target.name;\n\n    // sets lower and upper limits for time durationif during a 'focus' session\n    if(focusOrBreak === 'focus') time = Math.min(Math.max(time, 16), 59)\n    // sets lower and upper limits for time durationif during a 'break' session\n    if(focusOrBreak === 'break') time = Math.min(Math.max(time, 2), 14)\n\n    // variable used to determine if button pressed was incremental or decremental\n    const decreaseButton = event.target.value;\n    \n    return decreaseButton === 'decrease' ? time -= 1 : time += 1;\n}\n\nexport default DurationSetter;"]},"metadata":{},"sourceType":"module"}