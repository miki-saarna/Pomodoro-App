{"ast":null,"code":"function DurationSetter(event, time) {\n  // variable that indicates whether it's a 'focus' or 'break' session\n  const focusOrBreak = event.target.name; // variable used to determine if button pressed was incremental or decremental\n\n  const decreaseButton = event.target.value; // sets lower and upper limits for time durationif during a 'focus' session\n\n  if (focusOrBreak === 'focus') {\n    // time = Math.min(Math.max(time, 10), 55)\n    time = Math.min(time, 5) === 5;\n    return decreaseButton === 'decrease' ? time -= 5 : time += 5;\n  } // sets lower and upper limits for time durationif during a 'break' session\n\n\n  if (focusOrBreak === 'break') {\n    time = Math.min(Math.max(time, 2), 14);\n    return decreaseButton === 'decrease' ? time -= 1 : time += 1;\n  }\n}\n\nexport default DurationSetter;","map":{"version":3,"sources":["/Users/mikitosaarna/Documents/Software-Engineering/Thinkful/Qualified-challenges/react/project-pomodoro-timer/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/DurationSetter.js"],"names":["DurationSetter","event","time","focusOrBreak","target","name","decreaseButton","value","Math","min","max"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,IAA/B,EAAqC;AAEjC;AACA,QAAMC,YAAY,GAAGF,KAAK,CAACG,MAAN,CAAaC,IAAlC,CAHiC,CAKjC;;AACA,QAAMC,cAAc,GAAGL,KAAK,CAACG,MAAN,CAAaG,KAApC,CANiC,CAQjC;;AACA,MAAGJ,YAAY,KAAK,OAApB,EAA6B;AACzB;AACAD,IAAAA,IAAI,GAAGM,IAAI,CAACC,GAAL,CAASP,IAAT,EAAe,CAAf,MAAsB,CAA7B;AACA,WAAOI,cAAc,KAAK,UAAnB,GAAgCJ,IAAI,IAAI,CAAxC,GAA4CA,IAAI,IAAI,CAA3D;AACH,GAbgC,CAejC;;;AACA,MAAGC,YAAY,KAAK,OAApB,EAA6B;AACzBD,IAAAA,IAAI,GAAGM,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASR,IAAT,EAAe,CAAf,CAAT,EAA4B,EAA5B,CAAP;AACA,WAAOI,cAAc,KAAK,UAAnB,GAAgCJ,IAAI,IAAI,CAAxC,GAA4CA,IAAI,IAAI,CAA3D;AACH;AACJ;;AAED,eAAeF,cAAf","sourcesContent":["function DurationSetter(event, time) {\n\n    // variable that indicates whether it's a 'focus' or 'break' session\n    const focusOrBreak = event.target.name;\n\n    // variable used to determine if button pressed was incremental or decremental\n    const decreaseButton = event.target.value;\n\n    // sets lower and upper limits for time durationif during a 'focus' session\n    if(focusOrBreak === 'focus') {\n        // time = Math.min(Math.max(time, 10), 55)\n        time = Math.min(time, 5) === 5;\n        return decreaseButton === 'decrease' ? time -= 5 : time += 5;\n    }\n\n    // sets lower and upper limits for time durationif during a 'break' session\n    if(focusOrBreak === 'break') {\n        time = Math.min(Math.max(time, 2), 14)\n        return decreaseButton === 'decrease' ? time -= 1 : time += 1;\n    }\n}\n\nexport default DurationSetter;"]},"metadata":{},"sourceType":"module"}